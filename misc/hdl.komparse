-- Grammar for Hardware Description Language (HDL)
-- Author: Thomas Bollmeier <developer@thomas-bollmeier.de>
-- Version: 0.1.0

comment '//' '\n';
comment '/*' '*/';

token LBRACE '{';
token RBRACE '}';
token LBRACKET '\[';
token RBRACKET '\]';
token LPAR '\(';
token RPAR '\)';
token DOT2 '\.\.';
token COMMA ',';
token SEMICOLON ';';
token COLON ':';
token EQ '=';
token TRUE 'true';
token FALSE 'false';
token ID '[a-zA-Z][a-zA-Z0-9]*';
token POS_INT '[1-9][0-9]*';
token INT '0|[1-9][0-9]*';
token PARTS 'PARTS';

@start
chip -> 'CHIP' name#ID LBRACE
    (inputs | outputs)+
    (parts | builtin)
RBRACE;

inputs -> 'IN' in#inout (COMMA in#inout)* SEMICOLON;

inout -> ID (LBRACKET size#POS_INT RBRACKET)?;

outputs -> 'OUT' out#inout (COMMA out#inout)* SEMICOLON;

parts -> PARTS COLON part#part+;

part -> chip#ID LPAR conn#connection (COMMA conn#connection)* RPAR SEMICOLON;

connection -> param#ID (LBRACKET from#INT DOT2 to#INT RBRACKET)? EQ value;

value -> TRUE | FALSE | pin#ID (LBRACKET from#INT DOT2 to#INT RBRACKET)?;

builtin -> 'BUILTIN' chip#ID SEMICOLON;